Find the contiguous subarray within an array (containing at least one number) which has the largest sum.

For example:

Given the array [-2,1,-3,4,-1,2,1,-5,4],

the contiguous subarray [4,-1,2,1] has the largest sum = 6.

For this problem, return the maximum sum.
*****************************************************************************************************************************************
Apply Kadane's algorithm
source :https://en.wikipedia.org/wiki/Maximum_subarray_problem
********************************************************************************************************************************************
Solution :Java solution
public class Solution {
	// DO NOT MODFIY THE LIST. 
	public int maxSubArray(final List<Integer> a) {
	    int local_max=0,global_max=0;
	    int length=a.size();
	    if(a.size()>0){
	    
	    local_max=a.get(0);
	    global_max=a.get(0);
	    
	    for(int i=1;i<length;++i){
	        local_max=Math.max(local_max+a.get(i),a.get(i));
	        global_max=Math.max(local_max,global_max);
	        
	    }
	    }
	        return global_max;
	    }
}
